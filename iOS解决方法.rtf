{\rtf1\ansi\ansicpg936\cocoartf1348\cocoasubrtf170
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset134 STHeitiSC-Light;\f2\fnil\fcharset0 Menlo-Regular;
\f3\froman\fcharset0 Times-Roman;\f4\fswiss\fcharset0 ArialMT;}
{\colortbl;\red255\green255\blue255;\red127\green127\blue127;\red178\green24\blue137;\red0\green160\blue190;
\red131\green192\blue87;\red120\green109\blue196;\red219\green44\blue56;\red103\green103\blue103;\red128\green128\blue128;
\red38\green38\blue38;\red217\green11\blue0;\red255\green249\blue89;\red0\green61\blue204;\red0\green68\blue254;
\red198\green124\blue72;\red61\green79\blue113;\red92\green42\blue150;\red46\green18\blue108;\red194\green28\blue29;
\red65\green182\blue69;}
\paperw11900\paperh16840\margl1440\margr1440\vieww17340\viewh13640\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural

\f0\fs24 \cf0 1. 
\f1 \'c9\'e8\'d6\'c3\'be\'df\'d3\'d0\'b6\'e0\'b8\'f6
\f0 section
\f1 \'b5\'c4
\f0 tableview
\f1 \'b5\'c4\'c3\'bf\'b8\'f6
\f0 section
\f1 \'b4\'f8\'d3\'d0\'d4\'b2\'bd\'c7\'b1\'df\'bf\'f2\'a1\'a3\
 
\f0 \
	iOS7 
\f1 \'ba\'f3
\f0 tableview
\f1 \'b5\'c4
\f0 gouped
\f1 \'b7\'e7\'b8\'f1\'d3\'d0\'cb\'f9\'b1\'e4\'a3\'ac\'d4\'b2\'bd\'c7\'b2\'bb\'b8\'b4\'b4\'e6\'d4\'da\'a3\'ac\'bf\'c9\'d3\'c3\'d2\'d4\'cf\'c2\'b7\'bd\'b7\'a8\'ca\'b5\'cf\'d6\
	
\f2\fs22 \cf2 \CocoaLigature0 - (\cf3 void\cf2 )tableView:(\cf4 UITableView\cf2  *)tableView willDisplayCell:(\cf4 UITableViewCell\cf2  *)cell forRowAtIndexPath:(\cf4 NSIndexPath\cf2  *)indexPath \{\
\pard\tx529\pardeftab529\pardirnatural
\cf2     	\cf3 if\cf2  ([cell \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (tintColor)]) \{\
        	\cf3 if\cf2  (tableView == \cf3 self\cf2 .\cf5 tableView\cf2 ) \{\
            	\cf4 CGFloat\cf2  cornerRadius = \cf6 5.f\cf2 ;\
            	cell.\cf4 backgroundColor\cf2  = \cf4 UIColor\cf2 .\cf4 clearColor\cf2 ;\
            	\cf4 CAShapeLayer\cf2  *layer = [[\cf4 CAShapeLayer\cf2  \cf4 alloc\cf2 ] \cf4 init\cf2 ];\
            	\cf4 CGMutablePathRef\cf2  pathRef = \cf4 CGPathCreateMutable\cf2 ();\
            	\cf4 CGRect\cf2  bounds = \cf4 CGRectInset\cf2 (cell.\cf4 bounds\cf2 , \cf6 10\cf2 , \cf6 0\cf2 );\
            	\cf3 BOOL\cf2  addLine = \cf3 NO\cf2 ;\
            	\cf3 if\cf2  (indexPath.\cf4 row\cf2  == \cf6 0\cf2  && indexPath.\cf4 row\cf2  == [tableView \cf4 numberOfRowsInSection\cf2 :indexPath.\cf4 section\cf2 ]-\cf6 1\cf2 ) \{\
                \cf4 CGPathAddRoundedRect\cf2 (pathRef, \cf3 nil\cf2 , bounds, cornerRadius, cornerRadius);\
            	\} \cf3 else\cf2  \cf3 if\cf2  (indexPath.\cf4 row\cf2  == \cf6 0\cf2 ) \{\
                	\cf4 CGPathMoveToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMinX\cf2 (bounds), \cf4 CGRectGetMaxY\cf2 (bounds));\
                	\cf4 CGPathAddArcToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMinX\cf2 (bounds), \cf4 CGRectGetMinY\cf2 (bounds), \cf4 CGRectGetMidX\cf2 (bounds), \cf4 CGRectGetMinY\cf2 (bounds), cornerRadius);\
                	\cf4 CGPathAddArcToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMinY\cf2 (bounds), \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMidY\cf2 (bounds), cornerRadius);\
                	\cf4 CGPathAddLineToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMaxY\cf2 (bounds));\
                	addLine = \cf3 YES\cf2 ;\
            	\} \cf3 else\cf2  \cf3 if\cf2  (indexPath.\cf4 row\cf2  == [tableView \cf4 numberOfRowsInSection\cf2 :indexPath.\cf4 section\cf2 ]-\cf6 1\cf2 ) \{\
                	\cf4 CGPathMoveToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMinX\cf2 (bounds), \cf4 CGRectGetMinY\cf2 (bounds));\
                	\cf4 CGPathAddArcToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMinX\cf2 (bounds), \cf4 CGRectGetMaxY\cf2 (bounds), \cf4 CGRectGetMidX\cf2 (bounds), \cf4 CGRectGetMaxY\cf2 (bounds), cornerRadius);\
                	\cf4 CGPathAddArcToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMaxY\cf2 (bounds), \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMidY\cf2 (bounds), cornerRadius);\
                	\cf4 CGPathAddLineToPoint\cf2 (pathRef, \cf3 nil\cf2 , \cf4 CGRectGetMaxX\cf2 (bounds), \cf4 CGRectGetMinY\cf2 (bounds));\
            	\} \cf3 else\cf2  \{\
                	\cf4 CGPathAddRect\cf2 (pathRef, \cf3 nil\cf2 , bounds);\
                	addLine = \cf3 YES\cf2 ;\
            	\}\
            	layer.\cf4 path\cf2  = pathRef;\
            	\cf4 CFRelease\cf2 (pathRef);\
            	layer.\cf4 fillColor\cf2  = [\cf4 UIColor\cf2  \cf4 colorWithWhite\cf2 :\cf6 1.f\cf2  \cf4 alpha\cf2 :\cf6 0.8f\cf2 ].\cf4 CGColor\cf2 ;\
            \
            	\cf3 if\cf2  (addLine == \cf3 YES\cf2 ) \{\
                	\cf4 CALayer\cf2  *lineLayer = [[\cf4 CALayer\cf2  \cf4 alloc\cf2 ] \cf4 init\cf2 ];\
                	\cf4 CGFloat\cf2  lineHeight = (\cf6 1.f\cf2  / [\cf4 UIScreen\cf2  \cf4 mainScreen\cf2 ].\cf4 scale\cf2 );\
                	lineLayer.\cf4 frame\cf2  = \cf4 CGRectMake\cf2 (\cf4 CGRectGetMinX\cf2 (bounds)+\cf6 10\cf2 , bounds.\cf4 size\cf2 .\cf4 height\cf2 -lineHeight, bounds.\cf4 size\cf2 .\cf4 width\cf2 -\cf6 10\cf2 , lineHeight);\
                	lineLayer.\cf4 backgroundColor\cf2  = tableView.\cf4 separatorColor\cf2 .\cf4 CGColor\cf2 ;\
                	[layer \cf4 addSublayer\cf2 :lineLayer];\
            	\}\
            	\cf4 UIView\cf2  *testView = [[\cf4 UIView\cf2  \cf4 alloc\cf2 ] \cf4 initWithFrame\cf2 :bounds];\
            	[testView.\cf4 layer\cf2  \cf4 insertSublayer\cf2 :layer \cf4 atIndex\cf2 :\cf6 0\cf2 ];\
            	testView.\cf4 backgroundColor\cf2  = \cf4 UIColor\cf2 .\cf4 clearColor\cf2 ;\
            	cell.\cf4 backgroundView\cf2  = testView;\
        	\}\
    	\}\
	\}\
\
\pard\tx529\pardeftab529\pardirnatural
\cf0 2. 
\f1 \'c9\'e8\'d6\'c3
\f2 tableview
\f1 \'b5\'c4separater\'b7\'d6\'b8\'ee\'cf\'df\'d7\'f3\'b6\'d4\'c6\'eb\'a1\'a3\
\
 	apple\'c4\'ac\'c8\'cf\'ca\'b115\'a3\'ac \'d4\'dastoryboard\'c9\'e8\'d6\'c3\'b5\'cd\'d3\'da15\'b5\'c4\'d6\'b5\'ca\'b1\'c9\'e8\'d6\'c3\'ca\'a7\'d0\'a7\'a1\'a3\'bd\'e2\'be\'f6\'b7\'bd\'b7\'a8\'a3\'ba\cf2 \
\
	\cf0 viewDidLoad\'d6\'d0\'cc\'ed\'bc\'d3\cf2 \
	
\f2 \cf3 if\cf2  ([\cf3 self\cf2 .\cf5 tableView\cf2  \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (setSeparatorInset:)]) \{\
        [\cf3 self\cf2 .\cf5 tableView\cf2  \cf4 setSeparatorInset\cf2 :\cf4 UIEdgeInsetsZero\cf2 ];\
    \} //iOS7 
\f1 \'b5\'c4\'ca\'f4\'d0\'d4
\f2 \
\
    \cf3 if\cf2  ([\cf3 self\cf2 .\cf5 tableView\cf2  \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (setLayoutMargins:)]) \{\
        [\cf3 self\cf2 .\cf5 tableView\cf2  \cf4 setLayoutMargins\cf2 :\cf4 UIEdgeInsetsZero\cf2 ];\
    \} // iOS8 
\f1 \'b5\'c4\'ca\'f4\'d0\'d4
\f2 \
\
	
\f1 \cf0 \'c8\'bb\'ba\'f3\'d4\'da\'b4\'fa\'c0\'ed\'d6\'d0
\f2 \cf2 \
	- (\cf3 void\cf2 )tableView:(\cf4 UITableView\cf2  *)tableView willDisplayCell:(\cf4 UITableViewCell\cf2  *)cell forRowAtIndexPath:(\cf4 NSIndexPath\cf2  *)indexPath \{\
    	\cf3 if\cf2  ([cell \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (setSeparatorInset:)]) \{\
       		[cell \cf4 setSeparatorInset\cf2 :\cf4 UIEdgeInsetsZero\cf2 ];\
    	\}\
    \
    	\cf3 if\cf2  ([cell \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (setLayoutMargins:)]) \{\
        	[cell \cf4 setLayoutMargins\cf2 :\cf4 UIEdgeInsetsZero\cf2 ];\
    	\}\
	\}\
\
\cf0 3. TextView
\f1 \'c9\'e8\'d6\'c3
\f2 placeholder
\f1 \'bc\'b0\'d2\'fe\'b2\'d8\'bc\'fc\'c5\'cc
\f2 \
\
	# placeholder
\f1 \'bf\'c9\'d2\'d4\'d7\'d4\'b6\'a8\'d2\'e5\'d2\'bb\'b8\'f6label\'ca\'b5\'cf\'d6\'a1\'a3\'cf\'d4\'ca\'be\'ba\'cd\'d2\'fe\'b2\'d8label\'a3\'ba\cf2 \
\
	/**
\f2 - (\cf3 BOOL\cf2 )textView:(\cf4 UITextView\cf2  *)textView shouldChangeTextInRange:(\cf4 NSRange\cf2 )range replacementText:(\cf4 NSString\cf2  *)text \{\
    	\cf3 if\cf2  (![text \cf4 isEqualToString\cf2 :\cf7 @""\cf2 ])\
    	\{\
        	\cf3 self\cf2 .\cf5 textViewLabel\cf2 .\cf4 hidden\cf2  = \cf3 YES\cf2 ;\
    	\} 
\f1 // \'b5\'b1\'b5\'d8\'d2\'bb\'b4\'ce\'ca\'e4\'c8\'eb\'ca\'b1\'a3\'actextView\'c4\'da\'c8\'dd\'b2\'bb\'ce\'aa\'bf\'d5\'ca\'b1\'c9\'e8\'d6\'c3label\'d2\'fe\'b2\'d8
\f2 \
    \
    	\cf3 if\cf2  ([text \cf4 isEqualToString\cf2 :\cf7 @""\cf2 ] && range.\cf4 location\cf2  == \cf6 0\cf2  && range.\cf4 length\cf2  == \cf6 1\cf2 )\
    	\{\
        	\cf3 self\cf2 .\cf5 textViewLabel\cf2 .\cf4 hidden\cf2  = \cf3 NO\cf2 ;\
    	\} // 
\f1 \'ca\'e4\'c8\'eb\'bd\'e1\'ca\'f8\'ca\'b1\'a3\'actextView\'c4\'da\'c8\'dd\'ce\'aa\'bf\'d5\'c9\'e8\'d6\'c3label\'cf\'d4\'ca\'be
\f2 \
    \
    	\cf3 return\cf2  \cf3 YES\cf2 ;\
	\}**/
\f1 \'bc\'f4\'c7\'d0\'bb\'e1\'d3\'d0\'ce\'ca\'cc\'e2
\f2 \
\
\pard\tx577\pardeftab577\pardirnatural

\f1 \cf2 	
\f2\fs24 - (\cf3 BOOL\cf2 )textView:(\cf4 UITextView\cf2  *)textView shouldChangeTextInRange:(\cf4 NSRange\cf2 )range replacementText:(\cf4 NSString\cf2  *)text \{\
    \cf4 NSString\cf2  *textValue = [textView.\cf4 text\cf2  \cf4 stringByReplacingCharactersInRange\cf2 :range \cf4 withString\cf2 :text];\
    \cf3 if\cf2  (![textValue \cf4 isEqualToString\cf2 :\cf7 @""\cf2 ]) \{\
        \cf3 self\cf2 .\cf5 remarkPlaceHolderLabel\cf2 .\cf4 hidden\cf2  = \cf3 YES\cf2 ;\
    \} \cf3 else\cf2  \{\
        \cf3 self\cf2 .\cf5 remarkPlaceHolderLabel\cf2 .\cf4 hidden\cf2  = \cf3 NO\cf2 ;\
    \}\
    \
    \cf3 return\cf2  \cf3 YES\cf2 ;\
	\}
\f1\fs22 \
\pard\tx529\pardeftab529\pardirnatural
\cf2 	\
	\cf0 # TextView\'bc\'fc\'c5\'cc\'d2\'fe\'b2\'d8\
\
	[1] \'b2\'bb\'d3\'c3return\'bc\'fc\'ca\'b1\cf2 \
	
\f2 - (\cf3 BOOL\cf2 )textView:(\cf4 UITextView\cf2  *)textView shouldChangeTextInRange:(\cf4 NSRange\cf2 )range replacementText:(\cf4 NSString\cf2  *)text \{ \
    	\cf3 if\cf2  ([text \cf4 isEqualToString\cf2 :\cf7 @"\\n"\cf2 ]) \{\
        	[textView \cf4 resignFirstResponder\cf2 ];\
    	\}\
    \
		\cf3 return\cf2  \cf3 YES\cf2 ;\
	\}\

\f1 \
         \cf0  [2] \'b5\'e3\'bb\'f7\'b5\'b1\'c7\'b0view\'b5\'c4\'c6\'e4\'cb\'fb\'ce\'bb\'d6\'c3\'d2\'fe\'b2\'d8\'bc\'fc\'c5\'cc\'a3\'ac\'d3\'c3GestureRecognizer\'ca\'b5\'cf\'d6\
\
          [3] \'d4\'da\'bc\'fc\'c5\'cc\'b5\'c4view\'d6\'d0\'cc\'ed\'bc\'d3\'cd\'ea\'b3\'c9\'ca\'e4\'c8\'eb\'b0\'b4\'c5\'a5\'a3\'ac\'c9\'e8\'d6\'c3action\'cf\'ec\'d3\'a6\'b8\'c3\'b0\'b4\'c5\'a5\'b2\'a2\'d2\'fe\'b2\'d8\'bc\'fc\'c5\'cc
\f2 \cf2 \
	\
\
\cf0 4. 
\f1 \'c9\'e8\'d6\'c3
\f2 N
\f1 avigationBar
\f2 \
\
 	# 
\f1 \'c9\'e8\'d6\'c3
\f2 NavigationBar
\f1 \'cd\'b8\'c3\'f7\
\
	[1] \'d4\'danavigationController\'b4\'fa\'c0\'ed\'d6\'d0\'c9\'e8\'d6\'c3alpha\cf2 \
\pard\tx529\pardeftab529\pardirnatural

\f2 \cf2 \
    navigationController.\cf4 navigationBar\cf2 .\cf4 alpha\cf2  = \cf6 0.2\cf2 ; \
\
	
\f1 \cf0 \'d5\'e2\'d1\'f9\'c9\'e8\'d6\'c3\'b4\'e6\'d4\'da\'b5\'c4\'ce\'ca\'cc\'e2\'ca\'c7\'bb\'e1\'bd\'ab
\f2 navigationBar
\f1 \'d6\'d0\'b5\'c4\'d7\'d3\'ca\'d3\'cd\'bc\'d2\'b2\'b1\'e4\'b3\'c9\'cf\'e0\'d3\'a6\'cd\'b8\'c3\'f7\'b6\'c8\'a3\'ac\'d4\'dd\'ca\'b1\'ce\'b4\'d5\'d2\'b5\'bd\'bd\'e2\'be\'f6\'b7\'bd\'b0\'b8\'a1\'a3
\f2 \
\pard\tx529\pardeftab529\pardirnatural

\f1 \cf0 \
	[2] \'d7\'d4\'b6\'a8\'d2\'e5navigationBar\'a3\'ac \'bd\'ab\'c6\'e4\'d7\'d3\'ca\'d3\'cd\'bc
\f2 _UINavigationBarBackground
\f1 \'d2\'c6\'b3\'fd\'a3\'ac\'b1\'e3\'bf\'c9\'cb\'e6\'d2\'e2\'c9\'e8\'d6\'c3
\f2 navigationBar
\f1 \'b5\'c4\'b8\'f7\'d6\'d6\'ca\'f4\'d0\'d4\'a1\'a3\'c9\'e8\'d6\'c3\'cd\'b8\'c3\'f7\'b5\'c4\'bb\'b0\'bd\'ab\'c6\'e4
\f2 backgroundColor
\f1 \'c9\'e8\'d6\'c3\'b3\'c9\'cf\'e0\'d3\'a6\'cd\'b8\'c3\'f7\'b6\'c8\'a3\'ac \'bf\'c9\'ba\'dc\'ba\'c3\'bd\'e2\'be\'f6\'d7\'d3\'ca\'d3\'cd\'bc\'d2\'b2\'cd\'b8\'c3\'f7\'ce\'ca\'cc\'e2\'a1\'a3\cf8 \
	// \'d7\'d4\'b6\'a8\'d2\'e5
\f2 \cf4 UINavigationBar
\f1 \cf8 \
	
\f2 \cf2 - (\cf3 id\cf2 )initWithFrame:(\cf4 CGRect\cf2 )frame \{\
    	\cf3 self\cf2  = [\cf3 super\cf2  \cf4 initWithFrame\cf2 :frame];\
    	\cf3 if\cf2  (\cf3 self\cf2 ) \{\
        	\cf3 for\cf2  (\cf4 UIView\cf2  *view \cf3 in\cf2  \cf3 self\cf2 .\cf4 subviews\cf2 ) \{\
            	\cf3 if\cf2  ([view \cf4 isKindOfClass\cf2 :\cf4 NSClassFromString\cf2 (\cf7 @"_UINavigationBarBackground"\cf2 )]) \{\
                	[view \cf4 removeFromSuperview\cf2 ];\
            	\}\
        	\}\
    	\}\
   		\cf3 return\cf2  \cf3 self\cf2 ;\
	\}\
	
\f1 // \'c9\'e8\'d6\'c3\'b1\'b3\'be\'b0\'cd\'b8\'c3\'f7\
	
\f2 \cf4 UINavigationBar\cf2  *navigationBar = [[\cf5 CSNavigationBar\cf2  \cf4 alloc\cf2 ] \cf4 initWithFrame\cf2 :\cf4 CGRectMake\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , \cf6 320\cf2 , \cf6 64\cf2 )];\
    navigationBar.\cf4 barStyle\cf2  = \cf4 UIBarStyleBlack\cf2 ;\
    navigationBar.\cf4 backgroundColor\cf2  = [\cf4 UIColor\cf2  \cf4 colorWithRed\cf2 :\cf6 42\cf2  / \cf6 255.0\cf2  \cf4 green\cf2 :\cf6 53\cf2  / \cf6 255.0\cf2  \cf4 blue\cf2 :\cf6 71\cf2  / \cf6 255.0\cf2  \cf4 alpha\cf2 :\cf6 0.2\cf2 ];\
\
	
\f1 \cf0 # \'c6\'e4\'cb\'fb\'c9\'e8\'d6\'c3\cf2 \
\
	// \'c9\'e8\'d6\'c3navigationBar\'b5\'c4\'ba\'cdbarItem\'b5\'c4\'d7\'d6\'cc\'e5\'d1\'d5\'c9\'ab\
	
\f2 navigationController.\cf4 navigationBar\cf2 .\cf4 tintColor\cf2  = [\cf4 UIColor\cf2  \cf4 whiteColor\cf2 ];\
	// 
\f1 \'c9\'e8\'d6\'c3
\f2 navigationBar
\f1 \'b5\'c4\'b1\'b3\'be\'b0\'d1\'d5\'c9\'ab
\f2 \
    navigationController.\cf4 navigationBar\cf2 .\cf4 barTintColor\cf2  = [\cf4 UIColor\cf2  \cf4 whiteColor\cf2 ];\
\
\cf0 5. TextField
\f1 \'cf\'e0\'b9\'d8\'c9\'e8\'d6\'c3
\f2 \
	\
	# placeholder
\f1 \'b5\'c4\'d7\'d6\'cc\'e5\'d1\'d5\'c9\'ab
\f2 \
\
	\cf2 [\cf4 textField\cf2  \cf4 setValue\cf2 :[\cf5 CSColorUtil\cf2  whiteColor] \cf4 forKeyPath\cf2 :\cf7 @"_placeholderLabel.textColor"\cf2 ];\
\
	\cf0 # 
\f1 \'ce\'c4\'b1\'be\'d7\'f3\'b1\'df\'cb\'f5\'bd\'f8   \'b8\'f8\'c6\'e4leftView\'b8\'b3\'d6\'b5\cf2 \
	\
	
\f2 \cf4 UIView\cf2  *leftView = [[\cf4 UIView\cf2  \cf4 alloc\cf2 ] \cf4 initWithFrame\cf2 :\cf4 CGRectMake\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , \cf6 10\cf2 , \cf6 39\cf2 )];\
    textField.\cf4 leftView\cf2  = leftView;\
    textField.\cf4 leftViewMode\cf2  = \cf4 UITextFieldViewModeAlways\cf2 ;\
\
	\cf0 # 
\f1 \'bc\'fc\'c5\'cc\'b8\'b2\'b8\'c7\'bd\'e2\'be\'f6\'b7\'bd\'b7\'a8\
		
\f2 \
	
\f1 \cf9 // \'d4\'da\'bf\'aa\'ca\'bc\'b1\'e0\'bc\'ad\'b4\'fa\'c0\'ed\'d6\'d0\'c9\'cf\'d2\'c6self.view\'a3\'ac\'d4\'da\'bd\'e1\'ca\'f8\'b1\'e0\'bc\'ad\'ba\'f3\'cf\'c2\'d2\'c6\'bb\'d8\'d4\'ad\'c0\'b4\'b5\'c4\'ce\'bb\'d6\'c3
\f2 \cf0 \
	\cf2 -(\cf3 void\cf2 )textFieldDidBeginEditing:(\cf4 UITextField\cf2  *)textField\
	\{\
    	\cf4 CGRect\cf2  frame = [textField \cf4 convertRect\cf2 :textField.\cf4 frame\cf2  \cf4 toView\cf2 :\cf3 self\cf2 .\cf4 view\cf2 ];\
    	\cf3 int\cf2  offset = frame.\cf4 origin\cf2 .\cf4 y\cf2  + \cf6 32\cf2  - (\cf3 self\cf2 .\cf4 view\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2  - \cf6 216.0\cf2 );\
    \
    	[\cf4 UIView\cf2  \cf4 beginAnimations\cf2 :\cf5 ResizeKeyboard\cf2  \cf4 context\cf2 :\cf3 nil\cf2 ];\
    	[\cf4 UIView\cf2  \cf4 setAnimationDuration\cf2 :\cf6 0.3\cf2 ];\
    \
    	\cf3 if\cf2 (offset > \cf6 0\cf2 ) \{\
        	\cf3 self\cf2 .\cf4 view\cf2 .\cf4 frame\cf2  = \cf4 CGRectMake\cf2 (\cf6 0.0f\cf2 , -offset, \cf3 self\cf2 .\cf4 view\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 width\cf2 , \cf3 self\cf2 .\cf4 view\cf2 .\cf4 frame\cf2 .\cf4 size\cf2 .\cf4 height\cf2 );\
		\}\
    	[\cf4 UIView\cf2  \cf4 commitAnimations\cf2 ];\
	\}\
\
\cf0 6. Image
\f1 \'b5\'c4\'c0\'ad\'c9\'ec\
\
	\cf9 //  \'b9\'cc\'b6\'a8\'c9\'cf\'d7\'f3\'cf\'c2\'d3\'d2\'cf\'e0\'d3\'a6\'d6\'b5\'b2\'bb\'b1\'e4\'a3\'ac \'c0\'ad\'c9\'ec\'d6\'d0\'bc\'e4\'be\'d8\'d0\'ce\cf0 \
	
\f2 \cf4 UIImage \cf2 image = [[\cf4 UIImage\cf2  \cf4 imageNamed\cf2 :\cf7 @"bg@2x.png"\cf2 ] \cf4 resizableImageWithCapInsets\cf2 :\cf4 UIEdgeInsetsMake\cf2 (\cf6 25.0f\cf2 , \cf6 10.0f\cf2 , \cf6 5.0f\cf2 , \cf6 10.0f\cf2 ) \cf4 resizingMode\cf2 :\cf4 UIImageResizingModeStretch\cf2 ];\
\
\cf0 7. 
\f1\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 layoutSubviews\'d4\'da\'d2\'d4\'cf\'c2\'c7\'e9\'bf\'f6\'cf\'c2\'bb\'e1\'b1\'bb\'b5\'f7\'d3\'c3\'a3\'ba\
\
\pard\pardeftab720\fi560
\cf0 [1]\'a1\'a2init\'b3\'f5\'ca\'bc\'bb\'af\'b2\'bb\'bb\'e1\'b4\'a5\'b7\'a2layoutSubviews\
\uc0\u160 \u160 \u160 \'b5\'ab\'ca\'c7\'ca\'c7\'d3\'c3initWithFrame\u160 \'bd\'f8\'d0\'d0\'b3\'f5\'ca\'bc\'bb\'af\'ca\'b1\'a3\'ac\'b5\'b1rect\'b5\'c4\'d6\'b5\'b2\'bb\'ce\'aaCGRectZero\'ca\'b1,\'d2\'b2\'bb\'e1\'b4\'a5\'b7\'a2\
\
[2]\'a1\'a2addSubview\'bb\'e1\'b4\'a5\'b7\'a2layoutSubviews\
\
[3]\'a1\'a2\'c9\'e8\'d6\'c3view\'b5\'c4Frame\'bb\'e1\'b4\'a5\'b7\'a2layoutSubviews\'a3\'ac\'b5\'b1\'c8\'bb\'c7\'b0\'cc\'e1\'ca\'c7frame\'b5\'c4\'d6\'b5\'c9\'e8\'d6\'c3\'c7\'b0\'ba\'f3\'b7\'a2\'c9\'fa\'c1\'cb\'b1\'e4\'bb\'af\
\
[4]\'a1\'a2\'b9\'f6\'b6\'af\'d2\'bb\'b8\'f6UIScrollView\'bb\'e1\'b4\'a5\'b7\'a2layoutSubviews\
\
[5]\'a1\'a2\'d0\'fd\'d7\'aaScreen\'bb\'e1\'b4\'a5\'b7\'a2\'b8\'b8UIView\'c9\'cf\'b5\'c4layoutSubviews\'ca\'c2\'bc\'fe\
\
[6]\'a1\'a2\'b8\'c4\'b1\'e4\'d2\'bb\'b8\'f6UIView\'b4\'f3\'d0\'a1\'b5\'c4\'ca\'b1\'ba\'f2\'d2\'b2\'bb\'e1\'b4\'a5\'b7\'a2\'b8\'b8UIView\'c9\'cf\'b5\'c4layoutSubviews\'ca\'c2\'bc\'fe
\fs22 \cf10 \

\f3\fs28 \
\pard\pardeftab720

\f2\fs22 \cf10 8. 
\f1\fs24 \cf0 StoryBoard\'c0\'efviewcontroller\'cc\'f8\'d7\'aa\'b9\'d8\'cf\'b5\
\
	iOS8 \'c8\'a1\'cf\'fb\'c1\'cbpush\'a1\'a2model\'a1\'a2popover\'a1\'a2replace\'a3\'ac \'cf\'e0\'d3\'a6\'c8\'a1\'b6\'f8\'b4\'fa\'d6\'ae\'b5\'c4\'ca\'c7show\'a1\'a2present modally\'a1\'a2present as popover\'a1\'a2show detail\
\
	\cf11 \expnd0\expndtw0\kerning0
\'d7\'a2\'d2\'e2\cf0 \expnd0\expndtw0\kerning0
\'a3\'ba\'b5\'b1\'ba\'ac\'d3\'d0navigation\'b5\'c4\'ca\'b1\'ba\'f2\'a3\'ac\'ca\'f3\'b1\'ea\'c0\'ad\'c8\'a1\'b9\'d8\'cf\'b5\'c8\'e7\'b9\'fb\'d3\'c3\'d0\'c2\'b0\'e6\'b5\'c4show\'a3\'ac\'b2\'bb\'bb\'e1\'c9\'fa\'b3\'c9navigation item (\'d0\'e8\'d2\'aa\'ca\'d6\'b6\'af\'cd\'cf\'d7\'a7\'d2\'bb\'b8\'f6navigation item)\'a3\'ac\'cb\'f9\'d2\'d4\'b2\'bb\'c4\'dc\'cd\'cf\'b6\'afbar button  item\'b5\'bdnavigation bar\'c0\'ef\'c3\'e6\'a3\'ac \'d5\'e2\'ca\'c7\'b1\'c8\'bd\'cf\'bf\'d3\'b5\'c4\'b5\'d8\'b7\'bd\'a1\'a3\'cf\'c2\'c3\'e6\'ca\'c7\'d3\'d0\'b9\'d8\'d5\'e2\'bc\'b8\'b8\'f6\'d0\'c2\'cc\'f8\'d7\'aa\'b9\'d8\'cf\'b5\'b5\'c4\'bd\'e2\'ca\'cd(\'ce\'d2\'c4\'dc\'cb\'b5\'ce\'d2\'bf\'b4\'b5\'c4\'d2\'b2\'b2\'bb\'c3\'f7\'b0\'d7\'c3\'b4)\'a3\'ba\
	\
\pard\pardeftab720\qj
\cf0 \expnd0\expndtw0\kerning0
	[1]Show\
	\'b8\'f9\'be\'dd\'b5\'b1\'c7\'b0\'c6\'c1\'c4\'bb\'d6\'d0\'b5\'c4\'c4\'da\'c8\'dd\'a3\'ac\'d4\'damaster area\'bb\'f2\'d5\'dfdetail area\'d6\'d0\'d5\'b9\'ca\'be\'c4\'da\'c8\'dd\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ba\'c8\'e7\'b9\'fbapp\'b5\'b1\'c7\'b0\'cd\'ac\'ca\'b1\'cf\'d4\'ca\'bemaster\'ba\'cddetail\'ca\'d3\'cd\'bc\'a3\'ac\'c4\'da\'c8\'dd\'bd\'ab\'bb\'e1\'d1\'b9\'c8\'ebdetail\'c7\'f8\'d3\'f2\'a1\'a3\'c8\'e7\'b9\'fbapp\'b5\'b1\'c7\'b0\'bd\'f6\'cf\'d4\'ca\'bemaster\'bb\'f2\'d5\'dfdetail\'ca\'d3\'cd\'bc\'a3\'ac\'c4\'da\'c8\'dd\'d4\'f2\'d1\'b9\'c8\'eb\'b5\'b1\'c7\'b0\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b6\'d1\'d5\'bb\'d6\'d0\'b5\'c4\'b6\'a5\'b2\'e3\'ca\'d3\'cd\'bc\'a1\'a3\
\
	[2]Show Detail\
	\'d4\'dadetail area\'d6\'d0\'d5\'b9\'cf\'d6\'c4\'da\'c8\'dd\'a1\'a3\'c0\'fd\'c8\'e7\'a3\'ba\'bc\'b4\'ca\'b9app\'cd\'ac\'ca\'b1\'cf\'d4\'ca\'bemaster\'ba\'cddetail\'ca\'d3\'cd\'bc\'a3\'ac\'c4\'c7\'c3\'b4\'c4\'da\'c8\'dd\'bd\'ab\'b1\'bb\'d1\'b9\'c8\'ebdetail\'c7\'f8\'d3\'f2\'a1\'a3\'c8\'e7\'b9\'fbapp\'b5\'b1\'c7\'b0\'bd\'f6\'cf\'d4\'ca\'beMaster\'bb\'f2\'d5\'dfdetail\'ca\'d3\'cd\'bc\'a3\'ac\'c4\'c7\'c3\'b4\'c4\'da\'c8\'dd\'bd\'ab\'cc\'e6\'bb\'bb\'b5\'b1\'c7\'b0\'ca\'d3\'cd\'bc\'bf\'d8\'d6\'c6\'c6\'f7\'b6\'d1\'d5\'bb\'d6\'d0\'b5\'c4\'b6\'a5\'b2\'e3\'ca\'d3\'cd\'bc\'a1\'a3\
\
	[3]Present Modally\
	\'ca\'b9\'d3\'c3\'c4\'a3\'cc\'ac\'d5\'b9\'ca\'be\'c4\'da\'c8\'dd\'a1\'a3\'ca\'f4\'d0\'d4\'c3\'e6\'b0\'e5\'d6\'d0\'cc\'e1\'b9\'a9presentation style(UIModalPresentationStyle)\'d3\'eb transition style (UIModalTransitionStyle)\'c1\'bd\'d6\'d6\'d1\'a1\'cf\'ee\
\
	[4]Present as Popover\
	\'d4\'da\'c4\'b3\'b8\'f6\'cf\'d6\'d3\'d0\'ca\'d3\'cd\'bc\'d6\'d0\'b5\'c4\'c3\'aa\'b5\'e3\'b4\'a6\'ca\'b9\'d3\'c3\'b5\'af\'b3\'f6\'bf\'f2\'d5\'b9\'ca\'be\'c4\'da\'c8\'dd\'a1\'a3\'d5\'e2\'b8\'f6\'d1\'a1\'cf\'ee\'bf\'c9\'d6\'b8\'b6\'a8\'cf\'d4\'ca\'be\'d4\'da\'b5\'af\'b3\'f6\'bf\'f2\'ca\'d3\'cd\'bc\'d2\'bb\'b1\'df\'c9\'cf\'b5\'c4\'bc\'fd\'cd\'b7\'bf\'c9\'d3\'c3\'b7\'bd\'cf\'f2\'a3\'ac\'cd\'ac\'ca\'b1\'d2\'b2\'ca\'c7\'d6\'b8\'b6\'a8\'c3\'aa\'b5\'e3\'ca\'d3\'cd\'bc\'b5\'c4\'d2\'bb\'b8\'f6\'d1\'a1\'cf\'ee\'a1\'a3
\f4\fs32 \

\f1\fs24 \
9. \'d2\'bb\'b8\'f6delegate\'d2\'fd\'b7\'a2\'b5\'c4\'d4\'d6\'c4\'d1\
\
	\'d5\'e2\'b8\'f6\'bf\'d3\'cb\'e3\'ca\'c7\'d7\'d4\'bc\'ba\'cd\'da\'b5\'c4\'a3\'ac\'b2\'bb\'b9\'fd\'bb\'f2\'d0\'ed\'c4\'e3\'c3\'c7\'d2\'b2\'bb\'e1\'c5\'f6\'b5\'bd\'a1\'a3\'d3\'d0\'d2\'bb\'b8\'f6navigation controller A\'a3\'acA \'b5\'c4root view controller \'ce\'aaB\'a3\'acview controller C\'a1\'a2D \'ce\'aa\'cd\'ac\'bc\'b6\'a3\'ac\'b6\'bc\'ca\'c7\'b4\'d3B\'cd\'a8\'b9\'fd\'b2\'bb\'cd\'ac\'b7\'bd\'ca\'bdpush\'b6\'f8\'c0\'b4\'a3\'bb\'c8\'bb\'ba\'f3\'ce\'d2\'cf\'eb\'d4\'daC\'d6\'d0\'ca\'b9\'d3\'c3navigation controller\'b5\'c4delegate\'a3\'ac\'b2\'a2\'bd\'abnavigation controller\'b5\'c4delegate\'c9\'e8\'ce\'aaC\'a3\'ac\'c8\'bb\'b6\'f8\'ce\'ca\'cc\'e2\'c0\'b4\'c1\'cb\'a3\'ac\'b5\'b1\'bd\'e7\'c3\'e6\'b4\'d3C\'cd\'cb\'bb\'d8B\'a3\'ac\'d4\'da\'bd\'f8\'c8\'ebD\'ca\'b1\'ba\'c1\'ce\'de\'cc\'e1\'ca\'be\'b5\'d8\'b9\'d2\'c1\'cb\'a3\'ac\'b2\'bb\'c3\'f7\'d4\'ad\'d2\'f2\'a1\'a3\
\
	\'be\'ad\'b9\'fd\'b7\'b4\'b8\'b4\'d1\'d0\'be\'bf\'a3\'ac\'ce\'ca\'cc\'e2\'b3\'f6\'d4\'danavigation controller\'b5\'c4delegate\'c9\'cf\'a3\'ac\'b5\'b1\'ce\'d2\'c3\'c7\'bd\'ab\'c6\'e4dalegate\'b8\'b3\'d6\'b5\'ce\'aaC\'ba\'f3\'a3\'ac\'b5\'b1\'bd\'e7\'c3\'e6\'cd\'cb\'bb\'d8B\'d4\'da\'bd\'f8\'c8\'ebD\'ca\'b1\'a3\'acnavigation controller\'b5\'c4delegate\'d5\'d2\'b2\'bb\'b5\'bdC\'a3\'ac\'d2\'f2\'b4\'cb\'bb\'e1\'d6\'b1\'bd\'d3crash\'a1\'a3\
\
\'b3\'a2\'ca\'d4\'b5\'c4\'bd\'e2\'be\'f6\'b7\'bd\'b7\'a8\'a3\'ba\
\
	NO.1  \'bb\'e1\'d2\'fd\'b7\'a2\'d0\'c2\'b5\'c4\'ce\'ca\'cc\'e2\'a3\'ac \'b5\'b1C\'d6\'d0push\'d2\'bb\'b8\'f6view controller E\'ca\'b1\'a3\'acdelegate\'ca\'a7\'d0\'a7    
\b  
\b0 \cf11 \cb12 \'b2\'bb\'bf\'c9\'d0\'d0\cb1 \
\cf0 \
	
\f2\fs22 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf3 void\cf2 )navigationController:(\cf4 UINavigationController\cf2  *)navigationController willShowViewController:(\cf4 UIViewController\cf2  *)viewController animated:(\cf3 BOOL\cf2 )animated 	\{\
\pard\tx529\pardeftab529\pardirnatural
\cf2     	\cf3 if\cf2  (viewController == \cf3 self\cf2 ) \{\
           	
\f1 // Do something
\f2 \
    	\} \cf3 else\cf2  \{\
        	navigationController.\cf4 delegate\cf2  = \cf3 nil\cf2 ;\
    	\}\
	\}\
\
	
\f1\fs24 \cf0 NO.2 view controller D\'ca\'b5\'cf\'d6UINavigationControllerDelegate\cf2  
\fs22      
\b\fs24 \cf13 \'bf\'c9\'d0\'d0
\f2\b0\fs22 \cf2 \
	\
		D.\cf4 navigationController\cf2 .\cf4 delegate
\f1 \cf2  = 
\f2 \cf3 self
\f1 \cf2 ;
\f2 \
\
	
\f1\fs24 \cf0 NO.3 B\'ca\'b5\'cf\'d6prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender\'b7\'bd\'b7\'a8\cf2    
\b \cf14 \'bf\'c9\'d0\'d0
\f2\b0\fs22 \cf2 \
		
\f1 \cf0 #1 \'cd\'a8\'b9\'fd\'d2\'aa\'cc\'f8\'d7\'aa\'b5\'bd\'b5\'c4viewcontroller\'c0\'e0\'d0\'cd\'c5\'d0\'b6\'cf\'a3\'ac\'b2\'bb\'b9\'fd\'d0\'e8\'d2\'aa\'d2\'fd\'c8\'eb\'cf\'e0\'d3\'a6.h\'ce\'c4\'bc\'fe
\f2 \cf2 \
		- (\cf3 void\cf2 )prepareForSegue:(\cf4 UIStoryboardSegue\cf2  *)segue sender:(\cf3 id\cf2 )sender 			\{\
    		\cf3 if\cf2  ([segue.\cf4 destinationViewController\cf2  \cf4 isKindOfClass
\f1 \cf2 ;
\f2 [\cf5 D\cf2  \cf4 class\cf2 ]]) \{\
        		\cf3 self\cf2 .\cf4 navigationController\cf2 .\cf4 delegate\cf2  = \cf3 nil\cf2 ;\
    		\}\
		\}\
	\
		
\f1 \cf0 #2 \'cd\'a8\'b9\'fd\'b6\'a8\'d2\'e5\'b5\'c4identifier\'c5\'d0\'b6\'cf\'a3\'ac\'d7\'ee\'bc\'f2\'b5\'a5\'b5\'c4\'b7\'bd\'b7\'a8\cf2 \
		\
		
\f2 - (\cf3 void\cf2 )prepareForSegue:(\cf4 UIStoryboardSegue\cf2  *)segue sender:(\cf3 id\cf2 )sender \{\
    		\cf3 if\cf2  ([segue.\cf4 identifier\cf2  \cf4 isEqualToString\cf2 :\cf7 @\'93pushToD\'94\cf2 ]) \{\
        		\cf3 self\cf2 .\cf4 navigationController\cf2 .\cf4 delegate\cf2  = \cf3 nil\cf2 ;\
    		\}\
		\}\
\
\pard\tx529\pardeftab529\pardirnatural
\cf0 10. UIWindow
\f1 \'b5\'c4\'b4\'b4\'bd\'a8\
\
	WindowLevel\
	\{	\
		
\f2 \cf15 UIKIT_EXTERN\cf2  \cf3 const\cf2  \cf4 UIWindowLevel\cf2  UIWindowLevelNormal;//0.000000\
\pard\tx529\pardeftab529\pardirnatural
\cf15 		UIKIT_EXTERN\cf2  \cf3 const\cf2  \cf4 UIWindowLevel\cf2  UIWindowLevelAlert;//2000.000000\
\cf15 		UIKIT_EXTERN\cf2  \cf3 const\cf2  \cf4 UIWindowLevel\cf2  UIWindowLevelStatusBar;//1000.000000\
	\cf0 \}\
\
	#Window
\f1 \'b4\'b4\'bd\'a8\
\pard\tx529\pardeftab529\pardirnatural

\f2 \cf0 \
	\cf3 @implementation\cf2  ViewController \{\
    	\cf4 UIWindow\cf2  *_window;// window
\f1 \'d2\'bb\'b5\'a9\'b1\'bb\'b4\'b4\'bd\'a8\'a3\'ac\'be\'cd\'d7\'d4\'b6\'af\'bc\'d3\'b5\'bd\'d5\'fb\'b8\'f6\'bd\'e7\'c3\'e6
\f2 \
	\}\
\
	\cf5 _window\cf2  = [[\cf4 UIWindow\cf2  \cf4 alloc\cf2 ] \cf4 initWithFrame\cf2 :[\cf4 UIScreen\cf2  \cf4 mainScreen\cf2 ].\cf4 bounds\cf2 ];\
\pard\tx529\pardeftab529\pardirnatural
\cf5 	_window\cf2 .\cf4 windowLevel\cf2  = \cf4 UIWindowLevelAlert\cf2 ;\
	\cf5 _window\cf2 .\cf4 hidden\cf2  = \cf3 NO\cf2 ;\
\
	\cf0 # 
\f1 \'b8\'b2\'b8\'c7
\f2 status bar\
		
\f1 \'b4\'b4\'bd\'a8\'d2\'bb\'b8\'f6alert level\'b5\'c4window\'ca\'b5\'cf\'d6\'a3\'ac\'d7\'d4\'b6\'a8\'d2\'e5alertView\'d2\'b2\'bf\'c9\'d2\'d4\'c8\'e7\'b4\'cb\'ca\'b5\'cf\'d6\'a1\'a3\
\
\pard\tx529\pardeftab529\pardirnatural

\f2 \cf0 11. AutoLayout
\f1 \'d3\'f6\'b5\'bd\'b5\'c4\'ce\'ca\'cc\'e2
\f2 \
\
	
\f1 \'c8\'e7\'b9\'fb\'d2\'bb\'b8\'f6view1\'b5\'c4\'b2\'bc\'be\'d6\'a3\'ac\'d3\'eb\'c1\'ed\'d2\'bb\'b8\'f6view2\'b5\'c4\'b2\'bc\'be\'d6\'d3\'d0\'b9\'d8\'cf\'b5\'a3\'ac\'c4\'c7\'c3\'b4\'d4\'da\'ba\'f3\'cc\'a8\'b4\'fa\'c2\'eb\'d6\'d0\'c9\'e8\'d6\'c3view2\'b2\'bc\'be\'d6\'ca\'b1\'a3\'acview2\'b5\'c4\'b2\'bc\'be\'d6\'c1\'a2\'c2\'ed\'b8\'c4\'b1\'e4\'a3\'ac\'b5\'ab\'ca\'c7view1\'b5\'c4\'b2\'bc\'be\'d6\'b8\'c4\'b1\'e4\'bb\'e1\'c9\'d4\'d3\'d0\'d1\'d3\'b3\'d9\'a1\'a3\
\

\f2 12. 
\f1 \'cb\'f5\'b7\'c5\'cd\'bc\'c6\'ac\
\
	
\f2 \cf2 - (\cf4 UIImage\cf2  *)scaleImage:(\cf4 UIImage\cf2  *)image toScale:(\cf3 float\cf2 )scaleSize\
	\{\
    	\cf4 UIGraphicsBeginImageContext\cf2 (\cf4 CGSizeMake\cf2 (image.\cf4 size\cf2 .\cf4 width\cf2 *scaleSize,image.\cf4 size\cf2 .\cf4 height\cf2 *scaleSize));\
    	[image \cf4 drawInRect\cf2 :\cf4 CGRectMake\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , image.\cf4 size\cf2 .\cf4 width\cf2  * scaleSize, image.\cf4 size\cf2 .\cf4 height\cf2  *scaleSize)];\
    	\cf4 UIImage\cf2  *scaledImage = \cf4 UIGraphicsGetImageFromCurrentImageContext\cf2 ();\
    	\cf4 UIGraphicsEndImageContext\cf2 ();\
    	\cf3 return\cf2  scaledImage;\
	\}
\f1 \cf0 \

\f2 13. 
\f1 \'ca\'ae\'c1\'f9\'bd\'f8\'d6\'c6\'d1\'d5\'c9\'ab\'b4\'fa\'c2\'eb\'c9\'fa\'b3\'c9\'b6\'d4\'d3\'a6\'d1\'d5\'c9\'ab
\f2 \
\
	
\f1 \'b6\'a8\'d2\'e5
\f2 UIColor
\f1 \'b5\'c4
\f2 category\
	\cf3 @implementation\cf2  UIColor (Hex)\
\
	+ (\cf4 UIColor\cf2  *)colorWithHexString:(\cf4 NSString\cf2  *)hexString \{\
    	\cf3 return\cf2  [\cf4 UIColor\cf2  \cf5 colorWithHexString\cf2 :hexString \cf5 AndAlpha\cf2 :\cf6 1.0f\cf2 ];\
	\}\
\
	+ (\cf4 UIColor\cf2  *)colorWithHexString:(\cf4 NSString\cf2  *)hexString AndAlpha:(\cf4 CGFloat\cf2 )alpha \{\
    	hexString = [[hexString \cf4 stringByTrimmingCharactersInSet\cf2 :[\cf4 NSCharacterSet\cf2  \cf4 whitespaceAndNewlineCharacterSet\cf2 ]] \cf4 uppercaseString\cf2 ];\
    	\
    	\cf3 if\cf2  (hexString.\cf4 length\cf2  < \cf6 6\cf2 ) \{\
        	\cf4 NSLog\cf2 (\cf7 @"Wrong color hex string!"\cf2 );\
        	\cf3 return\cf2  [\cf4 UIColor\cf2  \cf4 clearColor\cf2 ];\
    	\}\
    \
    	\cf3 if\cf2  ([hexString \cf4 hasPrefix\cf2 :\cf7 @"0X"\cf2 ] || [hexString \cf4 hasPrefix\cf2 :\cf7 @"0x"\cf2 ]) \{\
        	hexString = [hexString \cf4 substringFromIndex\cf2 :\cf6 2\cf2 ];\
    	\}\
    \
    	\cf3 if\cf2  ([hexString \cf4 hasPrefix\cf2 :\cf7 @"#"\cf2 ]) \{\
        	hexString = [hexString \cf4 substringFromIndex\cf2 :\cf6 1\cf2 ];\
    	\}\
    \
    	\cf3 if\cf2  (hexString.\cf4 length\cf2  != \cf6 6\cf2 ) \{\
        	\cf4 NSLog\cf2 (\cf7 @"Wrong color hex string!"\cf2 );\
        	\cf3 return\cf2  [\cf4 UIColor\cf2  \cf4 clearColor\cf2 ];\
    	\}\
    \
    	\cf4 NSRange\cf2  range;\
    	range.\cf4 length\cf2  = \cf6 2\cf2 ;\
    	range.\cf4 location\cf2  = \cf6 0\cf2 ;\
    	\cf4 NSString\cf2  *colorRString = [hexString \cf4 substringWithRange\cf2 :range];\
    	range.\cf4 location\cf2  = \cf6 2\cf2 ;\
    	\cf4 NSString\cf2  *colorGString = [hexString \cf4 substringWithRange\cf2 :range];\
    	range.\cf4 location\cf2  = \cf6 4\cf2 ;\
    	\cf4 NSString\cf2  *colorBString = [hexString \cf4 substringWithRange\cf2 :range];\
    \
    	\cf3 unsigned\cf2  \cf3 int\cf2  red, green, blue;\
    	[[\cf4 NSScanner\cf2  \cf4 scannerWithString\cf2 :colorRString] \cf4 scanHexInt\cf2 :&red];\
    	\cf3 if\cf2  (red > \cf6 255\cf2 ) \{\
        	\cf3 return\cf2   [\cf4 UIColor\cf2  \cf4 clearColor\cf2 ];\
    	\}\
    	[[\cf4 NSScanner\cf2  \cf4 scannerWithString\cf2 :colorGString] \cf4 scanHexInt\cf2 :&green];\
    	\cf3 if\cf2  (green > \cf6 255\cf2 ) \{\
        	\cf3 return\cf2   [\cf4 UIColor\cf2  \cf4 clearColor\cf2 ];\
    	\}\
    	[[\cf4 NSScanner\cf2  \cf4 scannerWithString\cf2 :colorBString] \cf4 scanHexInt\cf2 :&blue];\
    	\cf3 if\cf2  (blue > \cf6 255\cf2 ) \{\
        	\cf3 return\cf2   [\cf4 UIColor\cf2  \cf4 clearColor\cf2 ];\
    	\}\
    \
    	\cf3 if\cf2  (alpha > \cf6 1\cf2 ) \{\
        	alpha = \cf6 1\cf2 ;\
    	\}\
    	\cf3 if\cf2  (alpha < \cf6 0\cf2 ) \{\
        	alpha = \cf6 0\cf2 ;\
    	\}\
    \
    	\cf4 UIColor\cf2  *color = [\cf4 UIColor\cf2  \cf4 colorWithRed\cf2 :red/\cf6 255.0f\cf2  \cf4 green\cf2 :green/\cf6 255.0f\cf2  \cf4 blue\cf2 :blue/\cf6 255.0f\cf2  \cf4 alpha\cf2 :alpha];\
    	\cf3 return\cf2  color;\
	\}\
\
\pard\tx529\pardeftab529\pardirnatural
\cf3 	@end\
\
\pard\tx529\pardeftab529\pardirnatural
\cf0 14. 
\f1 \'bb\'f1\'c8\'a1
\f2 UIColor
\f1 \'b5\'c4
\f2 RGBA
\f1 \'d6\'b5
\f2 \
\
   
\f1 \'b7\'bd\'b7\'a8\'d2\'bb\'a3\'ba
\f2 \
	
\fs24 \cf4 CGFloat\cf2  r=\cf6 0\cf2 ,g=\cf6 0\cf2 ,b=\cf6 0\cf2 ,a=\cf6 0\cf2 ;\
\pard\tx577\pardeftab577\pardirnatural
\cf2     \cf3 if\cf2  ([\cf3 self\cf2  \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (getRed:green:blue:alpha:)]) \{\
        [color \cf4 getRed\cf2 :&r \cf4 green\cf2 :&g \cf4 blue\cf2 :&b \cf4 alpha\cf2 :&a];\
    \}\
    \cf3 else\cf2  \{\
        \cf3 const\cf2  \cf4 CGFloat\cf2  *components = \cf4 CGColorGetComponents\cf2 (color.\cf4 CGColor\cf2 );\
        r = components[\cf6 0\cf2 ];\
        g = components[\cf6 1\cf2 ];\
        b = components[\cf6 2\cf2 ];\
        a = components[\cf6 3\cf2 ];\
    \}\
	
\f1 \'b7\'bd\'b7\'a8\'b6\'fe\'a3\'ba
\f2 \
		- (\cf3 void\cf2 )getRGBComponents:(\cf4 CGFloat\cf2  [\cf6 3\cf2 ])components forColor:(\cf4 UIColor\cf2  *)color \{     \
			\cf4 CGColorSpaceRef\cf2  rgbColorSpace = \cf4 CGColorSpaceCreateDeviceRGB\cf2 ();     \
			\cf3 unsigned\cf2  \cf3 char\cf2  resultingPixel[\cf6 4\cf2 ];     \
			\cf4 CGContextRef\cf2  context = \cf4 CGBitmapContextCreate\cf2 (&resultingPixel, \cf6 1\cf2 , \cf6 1\cf2 , \cf6 8\cf2 , \cf6 4\cf2 , rgbColorSpace, \cf4 kCGImageAlphaNoneSkipLast\cf2 );\
    		\cf4 CGContextSetFillColorWithColor\cf2 (context, [color \cf4 CGColor\cf2 ]);\
    		\cf4 CGContextFillRect\cf2 (context, \cf4 CGRectMake\cf2 (\cf6 0\cf2 , \cf6 0\cf2 , \cf6 1\cf2 , \cf6 1\cf2 ));\
    		\cf4 CGContextRelease\cf2 (context);\
    		\cf4 CGColorSpaceRelease\cf2 (rgbColorSpace);\
    		\cf3 for\cf2  (\cf3 int\cf2  component = \cf6 0\cf2 ; component < \cf6 3\cf2 ; component++) \{\
       			components[component] = resultingPixel[component] / \cf6 255.0f\cf2 ;\
    		\}\
		\}	
\f1\fs22 \cf0 \
\pard\tx529\pardeftab529\pardirnatural
\cf0 	\

\f2 15. TextField
\f1 \'b2\'bf\'b7\'d6\'d4\'b2\'bd\'c7\
\
	
\f2 \cf4 UIView\cf2  *view = [[\cf4 UIView\cf2  \cf4 alloc\cf2 ] \cf4 initWithFrame\cf2 :\cf4 CGRectMake\cf2 (\cf6 120\cf2 , \cf6 10\cf2 , \cf6 80\cf2 , \cf6 80\cf2 )];\
    view.\cf4 backgroundColor\cf2  = [\cf4 UIColor\cf2  \cf4 redColor\cf2 ];\
    [\cf3 self\cf2 .\cf4 view\cf2  \cf4 addSubview\cf2 :view];\
    \
    \cf4 UIBezierPath\cf2  *maskPath = [\cf4 UIBezierPath\cf2  \cf4 bezierPathWithRoundedRect\cf2 :view.\cf4 bounds\cf2  \cf4 byRoundingCorners\cf2 :\cf4 UIRectCornerBottomLeft\cf2  | \cf4 UIRectCornerBottomRight\cf2  \cf4 cornerRadii\cf2 :\cf4 CGSizeMake\cf2 (\cf6 10\cf2 , \cf6 10\cf2 )];\
    \cf4 CAShapeLayer\cf2  *maskLayer = [[\cf4 CAShapeLayer\cf2  \cf4 alloc\cf2 ] \cf4 init\cf2 ];\
    maskLayer.\cf4 frame\cf2  = view.\cf4 bounds\cf2 ;\
    maskLayer.\cf4 path\cf2  = maskPath.\cf4 CGPath\cf2 ;\
    view.\cf4 layer\cf2 .\cf4 mask\cf2  = maskLayer;\
\
	
\f1 \cf0 \'bf\'c9\'d1\'a1\'d4\'b2\'bd\'c7\'b5\'c4\'bd\'c7\'a3\'ba
\f2 \cf2 \
\pard\pardeftab720\sl384

\fs24 \cf16 \expnd0\expndtw0\kerning0
\CocoaLigature1     
\fs22 * UIRectCornerTopLeft\
    * UIRectCornerTopRight\
    * UIRectCornerBottomLeft\
    * UIRectCornerBottomRight\
    * UIRectCornerAllCorners
\f1 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\pardeftab720
\cf0 \

\f2 16.
\fs24  
\f1 foundation\'b6\'d4\'cf\'f3\'d7\'aa\'b3\'c9Json\
	
\f2\fs22 \cf4 NSData\cf2  *packet = [\cf4 NSJSONSerialization\cf2  \cf4 dataWithJSONObject\cf2 :dictionary \cf4 options\cf2 :\cf4 NSJSONWritingPrettyPrinted\cf2  \cf4 error\cf2 :&error];\
\pard\tx529\pardeftab529\pardirnatural
\cf2    	 \cf4 NSString\cf2  *json =[[\cf4 NSString\cf2  \cf4 alloc\cf2 ] \cf4 initWithData\cf2 :packet \cf4 encoding\cf2 :\cf4 NSUTF8StringEncoding\cf2 ];\
\
\pard\tx529\pardeftab529\pardirnatural

\fs24 \cf0 17. 
\f1 \'d7\'a8\'b3\'a1\'b6\'af\'bb\'ad\'cc\'e1\'b8\'d9
\f2\fs22 \cf2 \
\
  - CATrasition 
\f1 \'cc\'ed\'bc\'d3layer\'b5\'c4\'d7\'a8\'b3\'a1\'b6\'af\'bb\'ad
\f2 \
  - ViewController
\f1 \'d7\'aa\'b3\'a1   \'ca\'b5\'cf\'d6\'d0\'ad\'d2\'e9
\f2\fs24 \cf4 UIViewControllerAnimatedTransitioning\
  \cf9 - sb
\f1 \'d6\'d0\'ca\'b9\'d3\'c3\'d7\'d4\'b6\'a8\'d2\'e5\'b5\'c4
\f2 Segue\
\
\cf0 18. iOS [NSDate date]
\f1 \'d3\'eb\'ca\'b5\'bc\'ca\'ca\'b1\'bc\'e4\'cf\'e0\'b2\'ee
\f2 8
\f1 \'d0\'a1\'ca\'b1\'bd\'e2\'be\'f6\'b7\'bd\'b0\'b8\cf9 \
\
\pard\pardeftab720

\f2 \cf17 \expnd0\expndtw0\kerning0
\CocoaLigature1     NSDate\cf0 \expnd0\expndtw0\kerning0
 *date = [\cf17 \expnd0\expndtw0\kerning0
NSDate\cf0 \expnd0\expndtw0\kerning0
 \cf18 \expnd0\expndtw0\kerning0
date\cf0 \expnd0\expndtw0\kerning0
];\
\'a0 \'a0 \cf17 \expnd0\expndtw0\kerning0
NSTimeZone\cf0 \expnd0\expndtw0\kerning0
 *zone = [\cf17 \expnd0\expndtw0\kerning0
NSTimeZone\cf0 \expnd0\expndtw0\kerning0
 \cf18 \expnd0\expndtw0\kerning0
systemTimeZone\cf0 \expnd0\expndtw0\kerning0
];\cf17 \expnd0\expndtw0\kerning0
\
\cf0 \expnd0\expndtw0\kerning0
\'a0 \'a0 \cf17 \expnd0\expndtw0\kerning0
NSInteger\cf0 \expnd0\expndtw0\kerning0
 interval = [zone \cf18 \expnd0\expndtw0\kerning0
secondsFromGMTForDate\cf0 \expnd0\expndtw0\kerning0
: date];\
\'a0 \'a0 \cf17 \expnd0\expndtw0\kerning0
NSDate\cf0 \expnd0\expndtw0\kerning0
 *localeDate = [date\'a0 \cf18 \expnd0\expndtw0\kerning0
dateByAddingTimeInterval\cf0 \expnd0\expndtw0\kerning0
: interval];\'a0\
\'a0 \'a0 \cf18 \expnd0\expndtw0\kerning0
NSLog\cf0 \expnd0\expndtw0\kerning0
(\cf19 \expnd0\expndtw0\kerning0
@"enddate=%@"\cf0 \expnd0\expndtw0\kerning0
,localeDate);\
\
19. 
\f1 \expnd0\expndtw0\kerning0
\'b9\'d8\'d3\'da
\f2 \expnd0\expndtw0\kerning0
cell
\f1 \expnd0\expndtw0\kerning0
\'d6\'d8\'d3\'c3\'b5\'bc\'d6\'c2\'ca\'fd\'be\'dd\'bb\'ec\'c2\'d2\'b5\'c4\'ce\'ca\'cc\'e2
\f2 \expnd0\expndtw0\kerning0
\
\
    
\f1 \expnd0\expndtw0\kerning0
\'b2\'bb\'cd\'ac\'c0\'e0\'d0\'cd
\f2 \expnd0\expndtw0\kerning0
cell
\f1 \expnd0\expndtw0\kerning0
\'bf\'cf\'b6\'a8\'b4\'b4\'bd\'a8\'b2\'bb\'cd\'ac\'b5\'c4
\f2 \expnd0\expndtw0\kerning0
identifier
\f1 \expnd0\expndtw0\kerning0
\'a3\'ac\'c8\'bb\'b2\'a2\'c2\'d1\'a3\'ac\'ce\'ca\'cc\'e2\'ce\'aa\'b5\'c3\'b5\'bd\'b8\'f9\'b1\'be\'bd\'e2\'be\'f6\'a3\'ac\'d3\'d0\'ca\'b1\'d0\'e8\'d2\'aa\'d0\'c2\'b4\'b4\'bd\'a8\'b8\'a8\'d6\'fa\'ca\'fd\'be\'dd\'d4\'b4\'b5\'c8\'b5\'c8\'a1\'a3\
\
          \'d2\'c6\'b3\'fd\'cb\'f9\'d3\'d0\'d7\'d3view\'bb\'f2\'d0\'ed\'bf\'c9\'d0\'d0\'a3\'ac\'b5\'ab\'d4\'dacell\'c9\'cf\'bc\'d3\'b5\'c4\'b1\'b3\'be\'b0\'c9\'ab\'bb\'f2\'c6\'e4\'cb\'fb\'ca\'f4\'d0\'d4\'c9\'e8\'d6\'c3\'bb\'b9\'ca\'c7\'bb\'e1\'bb\'ec\'c2\'d2\'a1\'a3\
           \
          
\f2 \cf2 \kerning1\expnd0\expndtw0 \CocoaLigature0 - (\cf4 UITableViewCell\cf2  *)tableView:(\cf4 UITableView\cf2  *)tableView cellForRowAtIndexPath:(\cf4 NSIndexPath\cf2  *)indexPath\
\pard\tx577\pardeftab577\pardirnatural
\cf2 	\{\
    	\cf3 static\cf2  \cf4 NSString\cf2  *CellIdentifier = \cf7 @"Cell"\cf2 ;\
    	\cf4 UITableViewCell\cf2  *cell = [tableView \cf4 dequeueReusableCellWithIdentifier\cf2 :CellIdentifier]; \cf20 //
\f1 \'b3\'f6\'c1\'d0\'bf\'c9\'d6\'d8\'d3\'c3\'b5\'c4
\f2 cell\cf2 \
    	\cf3 if\cf2  (cell == \cf3 nil\cf2 ) \{\
        	cell = [[\cf4 UITableViewCell\cf2  \cf4 alloc\cf2 ] \cf4 initWithStyle\cf2 :\cf4 UITableViewCellStyleDefault\cf2  \cf4 reuseIdentifier\cf2 :CellIdentifier];\
    	\}\
    	\cf3 else\cf2 \
    	\{\
        	\cf20 //
\f1 \'c9\'be\'b3\'fd
\f2 cell
\f1 \'b5\'c4\'cb\'f9\'d3\'d0\'d7\'d3\'ca\'d3\'cd\'bc
\f2 \cf2 \
        	\cf3 while\cf2  ([cell.\cf4 contentView\cf2 .\cf4 subviews\cf2  \cf4 lastObject\cf2 ] != \cf3 nil\cf2 )\
        	\{\
            	[(\cf4 UIView\cf2 *)[cell.\cf4 contentView\cf2 .\cf4 subviews\cf2  \cf4 lastObject\cf2 ] \cf4 removeFromSuperview\cf2 ];\
        	\}\
    	\}\
	\}\
\
20. Core Location\
- 
\f1 \'c7\'eb\'c7\'f3\'b6\'a8\'ce\'bb \'a3\'a8\'d7\'a2;\'c8\'e7\'b9\'fb\'cf\'c2\'c3\'e6\'b5\'c4\'b4\'a6\'c0\'ed\'d4\'darootviewcontroller\'b5\'c4viewDidLoad\'d6\'d0\'b4\'a6\'c0\'ed\'a3\'acalert\'b5\'af\'b2\'bb\'b3\'f6\'c0\'b4\'a3\'ac\'d2\'f2\'ce\'aa\'b5\'b1\'c7\'b0controller\'b5\'c4view\'ce\'a7\'d4\'dawindow\'b5\'c4\'b2\'e3\'bc\'b6\'d6\'d0\'a3\'acwindow\'ce\'aanil\'a3\'a9
\f2 \
	[\cf5 _manager\cf2  = [\cf4 CLLocationManager\cf2  \cf4 alloc\cf2 ] \cf4 init\cf2 ];\
    \cf5 _manager\cf2 .\cf4 delegate\cf2  = \cf3 self\cf2 ;\
    \
    \cf3 if\cf2  ([\cf4 CLLocationManager\cf2  \cf4 locationServicesEnabled\cf2 ]) \{\
        \cf3 if\cf2  ([\cf5 _manager\cf2  \cf4 respondsToSelector\cf2 :\cf3 @selector\cf2 (requestWhenInUseAuthorization)]) \{\
            [\cf5 _manager\cf2  \cf4 requestWhenInUseAuthorization\cf2 ];\
        \} \cf3 else\cf2  \{\
            [\cf5 _manager\cf2  \cf4 startUpdatingLocation\cf2 ];\
        \}\
    \}\
    \
    \cf3 switch\cf2  ([\cf4 CLLocationManager\cf2  \cf4 authorizationStatus\cf2 ]) \{\
        \cf3 case\cf2  \cf4 kCLAuthorizationStatusNotDetermined\cf2 :\
            [\cf5 _manager\cf2  \cf4 requestWhenInUseAuthorization\cf2 ];\
            \cf3 break\cf2 ;\
        \
        \cf3 case\cf2  \cf4 kCLAuthorizationStatusAuthorizedAlways\cf2 :\
        \
        \cf3 case\cf2  \cf4 kCLAuthorizationStatusDenied\cf2 :\
            \
        \cf3 case\cf2  \cf4 kCLAuthorizationStatusRestricted\cf2 : \{\
            \cf4 UIAlertController\cf2  *alert = [\cf4 UIAlertController\cf2  \cf4 alertControllerWithTitle\cf2 :\cf7 @"
\f1 \'c7\'eb\'c7\'f3\'ca\'b9\'d3\'c3\'b6\'a8\'ce\'bb\'ca\'a7\'b0\'dc
\f2 "\cf2  \cf4 message\cf2 :\cf7 @"
\f1 \'d0\'e8\'d2\'aa\'ca\'b9\'d3\'c3\'b6\'a8\'ce\'bb\'a3\'ac\'c7\'eb\'c9\'e8\'d6\'c3\'ce\'aa
\f2 \'91InUse\'92"\cf2  \cf4 preferredStyle\cf2 :\cf4 UIAlertControllerStyleAlert\cf2 ];\
            [alert \cf4 addAction\cf2 :[\cf4 UIAlertAction\cf2  \cf4 actionWithTitle\cf2 :\cf7 @"
\f1 \'c8\'a1\'cf\'fb
\f2 "\cf2  \cf4 style\cf2 :\cf4 UIAlertActionStyleCancel\cf2  \cf4 handler\cf2 :\cf3 nil\cf2 ]];\
            [alert \cf4 addAction\cf2 :[\cf4 UIAlertAction\cf2  \cf4 actionWithTitle\cf2 :\cf7 @"
\f1 \'c8\'a5\'c9\'e8\'d6\'c3
\f2 "\cf2  \cf4 style\cf2 :\cf4 UIAlertActionStyleDefault\cf2  \cf4 handler\cf2 :^(\cf4 UIAlertAction\cf2  *action) \{\
                [[\cf4 UIApplication\cf2  \cf4 sharedApplication\cf2 ] \cf4 openURL\cf2 :[\cf4 NSURL\cf2  \cf4 URLWithString\cf2 :\cf4 UIApplicationOpenSettingsURLString\cf2 ]];\
            \}]];\
            \
            [\cf3 self\cf2  \cf4 presentViewController\cf2 :alert \cf4 animated\cf2 :\cf3 YES\cf2  \cf4 completion\cf2 :\cf3 nil\cf2 ];\
            \cf3 break\cf2 ;\
        \}\
            \
        \cf3 default\cf2 :\
            \cf3 break\cf2 ;\
    \}\
\
- delegate\
\
	- (\cf3 void\cf2 )locationManager:(\cf4 CLLocationManager\cf2  *)manager didChangeAuthorizationStatus:(\cf4 CLAuthorizationStatus\cf2 )status \{\
    \cf3 if\cf2  (status == \cf4 kCLAuthorizationStatusAuthorizedWhenInUse\cf2 ) \{\
        [\cf5 _manager\cf2  \cf4 startUpdatingLocation\cf2 ];\
    \}\
\}\
\
- (\cf3 void\cf2 )locationManager:(\cf4 CLLocationManager\cf2  *)manager didUpdateLocations:(\cf4 NSArray\cf2  *)locations \{\
    \cf4 CLLocation\cf2  *location = locations[\cf6 0\cf2 ];\
    \cf4 CLLocationCoordinate2D\cf2  coordinate2D = location.\cf4 coordinate\cf2 ;\
    \cf4 NSLog\cf2 (\cf7 @"%@"\cf2 , coordinate2D);\
\}\
\
21. iPad 
\f1 \'d2\'d4\'ba\'e1\'c6\'c1\'b5\'c4\'b7\'bd\'ca\'bd\'b4\'f2\'bf\'aa\'cf\'b5\'cd\'b3\'cf\'e0\'b2\'e1
\f2 \
\
- 
\f1 \'cf\'c8\'bd\'abproject\'d6\'a7\'b3\'d6\'b5\'c4\'b7\'bd\'cf\'f2\'c9\'e8\'d6\'c3\'ce\'aaPortrait\'a3\'a8\'b1\'d8\'d0\'e8\'a3\'a9\'a3\'acLandscape Left\'a3\'ac Landscape Right\

\f2 - 
\f1 \'d6\'d8\'d0\'b4
\f2 UIImageController
\f1 \'b5\'c4\'c1\'bd\'b8\'f6\'b7\'bd\'b7\'a8
\f2 \
	\cf3 @implementation\cf2  UIImagePickerController (MPLandScapeImagePicker)\
\
	- (\cf3 BOOL\cf2 )shouldAutorotate \{\
	    \cf3 return\cf2  \cf3 YES\cf2 ;\
	\}\
\
	- (\cf4 NSUInteger\cf2 )supportedInterfaceOrientations \{\
   		\cf3 return\cf2  \cf4 UIInterfaceOrientationMaskLandscape\cf2 ;\
	\}\
\
\cf3 	@end}